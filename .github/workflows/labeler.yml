name: "Issue Labeler"
on:
  issues:
    types: [opened]
  pull_request_target:
    types: [opened]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:

    - name: Add agent-java label
      run: gh issue edit "${NUMBER}" --add-label "agent-java" --repo "${{ github.repository }}"
      env:
        NUMBER: ${{ github.event.issue.number || github.event.pull_request.number }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get token
      id: get_token
      uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
      with:
        app_id: ${{ secrets.OBS_AUTOMATION_APP_ID }}
        private_key: ${{ secrets.OBS_AUTOMATION_APP_PEM }}
        permissions: >-
          {
            "members": "read",
            "organization_projects": "write",
            "issues": "read"
          }

    - name: Check team membership for user
      uses: elastic/get-user-teams-membership@1.1.0
      id: checkUserMember
      with:
        username: ${{ github.actor }}
        team: 'apm'
        usernamesToExclude: |
          dependabot
          dependabot[bot]
        GITHUB_TOKEN: ${{ steps.get_token.outputs.token }}

    - name: Show team membership
      run: |
        echo "::debug::isTeamMember: ${{ steps.checkUserMember.outputs.isTeamMember }}"
        echo "::debug::isExcluded: ${{ steps.checkUserMember.outputs.isExcluded }}"

    - name: Add community and triage labels
      if: steps.checkUserMember.outputs.isTeamMember != 'true' && steps.checkUserMember.outputs.isExcluded != 'true'
      run: gh issue edit "${NUMBER}" --add-label "community,triage" --repo "${{ github.repository }}"
      env:
        NUMBER: ${{ github.event.issue.number || github.event.pull_request.number }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Assign new internal pull requests to project
      id: add-to-project
      if: (steps.checkUserMember.outputs.isTeamMember == 'true' || steps.checkUserMember.outputs.isExcluded == 'true') && github.event_name == 'pull_request'
      uses: elastic/oblt-actions/github/project-add@v1
      with:
        github-token: ${{ steps.get_token.outputs.token }}
        project-id: 1829
        item-url: "${{ github.event.pull_request.url }}"

    - name: set status in project
      id: set-project-status-field
      if: (steps.checkUserMember.outputs.isTeamMember == 'true' || steps.checkUserMember.outputs.isExcluded == 'true') && github.event_name == 'pull_request'
      uses: elastic/oblt-actions/github/project-field-set@v1
      with:
        github-token: ${{ steps.get_token.outputs.token }}
        project-id: 1829
        item-id: ${{ steps.add-to-project.outputs.item-id }}
        field-name: 'Status'
        field-value: 'In Progress'

    - name: set agent in project
      id: set-project-agent-field
      if: (steps.checkUserMember.outputs.isTeamMember == 'true' || steps.checkUserMember.outputs.isExcluded == 'true') && github.event_name == 'pull_request'
      uses: elastic/oblt-actions/github/project-field-set@v1
      with:
        github-token: ${{ steps.get_token.outputs.token }}
        project-id: 1829
        item-id: ${{ steps.add-to-project.outputs.item-id }}
        field-name: 'Agent'
        field-value: 'java'

    - name: set iteration in project
      id: set-project-iteration-field
      if: (steps.checkUserMember.outputs.isTeamMember == 'true' || steps.checkUserMember.outputs.isExcluded == 'true') && github.event_name == 'pull_request'
      uses: elastic/oblt-actions/github/project-field-set@v1
      with:
        github-token: ${{ steps.get_token.outputs.token }}
        project-id: 1829
        item-id: ${{ steps.add-to-project.outputs.item-id }}
        field-name: 'Iteration'
        field-value: '@current'
        field-type: 'iteration'
