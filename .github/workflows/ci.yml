name: ci

on:
  workflow_call:
    inputs:
      # enabled by default, required for merge through default GH check
      test_ci:
        description: 'Enable Unit tests'
        default: true
        required: false
        type: boolean
      # disabled by default, but required for merge, there are two GH checks:
      # - Non-Application Server integration tests
      # - Application Server integration tests
      # opt-in with 'ci:agent-integration'
      agent_integration_tests_ci:
        description: 'Enable Agent Integration tests'
        default: false
        required: false
        type: boolean
      # disabled by default, not required for merge
      # opt-in with 'ci:jdk-compatibility' tag on PR
      jdk_compatibility_ci:
        description: 'Enable JDK compatibility tests'
        default: false
        required: false
        type: boolean
      # disabled by default, not required for merge
      # opt-in with 'ci:windows' tag on PR
      windows_ci:
        description: 'Enable Windows build & tests'
        default: false
        required: false
        type: boolean
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.asciidoc'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - ready_for_review
    paths-ignore:
      - '**.md'
      - '**.asciidoc'

env:
  JAVA_VERSION: 17
  JAVA_DIST: temurin

# limit the access of the generated GITHUB_TOKEN
permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/build
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DIST }}
      - uses: ./.github/workflows/stash
        with:
          name: build
          path: ${{ github.workspace }}

  license:
    name: License
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/unstash
        with:
          name: build
          path: ${{ github.workspace }}
      - name: mvn license
        uses: ./.github/workflows/build
        with:
          command: ./mvnw org.codehaus.mojo:license-maven-plugin:aggregate-third-party-report -Dlicense.excludedGroups=^co\\.elastic\\.
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DIST }}

  unit-tests:
    name: Unit Tests
    if: inputs.test_ci == true
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/unstash
        with:
          name: build
          path: ${{ github.workspace }}
      - uses: ./.github/workflows/build
        with:
          command: ./mvnw test
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DIST }}
      - name: Store test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            **/junit-*.xml
            **/TEST-*.xml

  non-app-server-integration-tests:
    name: Non-Application Server integration tests
    if: |
      contains(github.event.pull_request.labels.*.name, 'ci:agent-integration')
      || github.event.pull_request.draft == false
      || inputs.agent_integration_tests_ci == true
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/unstash
        with:
          name: build
          path: ${{ github.workspace }}
      - uses: ./.github/workflows/build
        with:
          command: ./mvnw -q -P ci-non-application-server-integration-tests verify
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DIST }}
      - name: Store test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            **/junit-*.xml
            **/TEST-*.xml

  app-server-integration-tests:
    name: Application Server integration tests
    if: |
      contains(github.event.pull_request.labels.*.name, 'ci:agent-integration')
      || github.event.pull_request.draft == false
      || inputs.agent_integration_tests_ci == true
    # Pinned to ubuntu 20.04 until https://github.com/elastic/apm-agent-java/issues/3035 is solved.
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/unstash
        with:
          name: build
          path: ${{ github.workspace }}
      - uses: ./.github/workflows/build
        with:
          command: ./mvnw -q -P ci-application-server-integration-tests verify
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DIST }}
      - name: Store test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            **/junit-*.xml
            **/TEST-*.xml

  javadoc:
    name: Javadoc
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/unstash
        with:
          name: build
          path: ${{ github.workspace }}
      - uses: ./.github/workflows/build
        with:
          command: ./mvnw compile javadoc:javadoc
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DIST }}

  unit-tests-windows:
    name: Build & Test Windows
    if: |
      inputs.test_ci == true
      && (contains(github.event.pull_request.labels.*.name, 'ci:windows')
        || inputs.windows_ci == true)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/build
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DIST }}
          command: ./mvnw test
      - name: Store test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            **/junit-*.xml
            **/TEST-*.xml

  jdk-compatibility-tests:
    if: |
      contains(github.event.pull_request.labels.*.name, 'ci:jdk-compatibility')
      || inputs.jdk_compatibility_ci == true
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        version: [11, 17, 19]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/unstash
        with:
          name: build
          path: ${{ github.workspace }}
      - name: mvn test for ${{ matrix.version }}:${{ env.JAVA_DIST }}
        uses: ./.github/workflows/build
        with:
          command: ./mvnw test
          java-version: ${{ matrix.version }}
          distribution: ${{ env.JAVA_DIST }}
      - name: Store test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            **/junit-*.xml
            **/TEST-*.xml
