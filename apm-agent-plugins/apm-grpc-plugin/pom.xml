<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>apm-agent-plugins</artifactId>
        <groupId>co.elastic.apm</groupId>
        <version>1.12.1-SNAPSHOT</version>
    </parent>

    <artifactId>apm-grpc-plugin</artifactId>
    <name>${project.groupId}:${project.artifactId}</name>

    <properties>
        <apm-agent-parent.base.dir>${project.basedir}/../..</apm-agent-parent.base.dir>
        <protobuf.version>3.8.0</protobuf.version>
        <grpc.version>1.26.0</grpc.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
            <version>${grpc.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>update-grpc</id>
            <!--
            Separate profile to update generated classes from protocol buffers

            Generated classes are checked in just like regular files because IntelliJ does not include generated test
            sources by default and requires manual setup. Given updates to this test application are quite rare, that'
            definitely an acceptable compromise to make it dev friendly.
            -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.xolstice.maven.plugins</groupId>
                        <artifactId>protobuf-maven-plugin</artifactId>
                        <version>0.6.1</version>
                        <configuration>
                            <protocArtifact>
                                com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                            </protocArtifact>
                            <pluginId>grpc-java</pluginId>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
                            </pluginArtifact>
                            <!-- make generated java files like regular files -->
                            <outputDirectory>${basedir}/src/test/java</outputDirectory>
                            <!--
                            required otherwise folder is wiped including non-generated classes
                            as an extra safety we use another package for generated classes
                            -->
                            <clearOutputDirectory>false</clearOutputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>compile-custom</goal>
                                    <goal>test-compile</goal>
                                    <goal>test-compile-custom</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- updating licence header on generated files is required -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>update-file-header</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>

            </build>
        </profile>
    </profiles>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.5.0.Final</version>
            </extension>
        </extensions>
    </build>


</project>
