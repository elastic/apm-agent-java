<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>co.elastic.apm</groupId>
        <artifactId>apm-spring-webflux</artifactId>
        <version>1.44.1-SNAPSHOT</version>
    </parent>

    <artifactId>apm-spring-webclient-plugin</artifactId>
    <name>${project.groupId}:${project.artifactId}</name>
    <properties>
        <!-- for licence header plugin -->
        <apm-agent-parent.base.dir>${project.basedir}/../../..</apm-agent-parent.base.dir>
        <!-- we call static method org.springframework.web.reactive.function.client.ClientRequest#from -->
        <maven.compiler.target>8</maven.compiler.target>
        <maven.compiler.source>${maven.compiler.target}</maven.compiler.source>

        <animal.sniffer.skip>true</animal.sniffer.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${version.spring-boot-3}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>co.elastic.apm</groupId>
            <artifactId>apm-httpclient-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <!--
                    jcl needs to be excluded because of the integration tests.
                    jcl seems to provide apache commons logging classes, but compiled with java 17.
                    Wiremock does some reflective lookup on these classes, which causes the tests to fail with Java 11.
                    As a workaround, jcl has been excluded and commons-logging has been included as test dependency instead
                    -->
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jcl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>apm-httpclient-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <!-- default client implementation: netty -->
        <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty-http</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver-dns-native-macos</artifactId>
            <classifier>osx-aarch_64</classifier>
            <scope>test</scope>
        </dependency>
        <!-- alternative client implementation: jetty -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-reactive-httpclient</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- alternative client implementation: apache async client -->
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents.core5</groupId>
            <artifactId>httpcore5-reactive</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.ivy</groupId>
            <artifactId>ivy</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
