[
    {
        "key": "active",
        "type": "Boolean",
        "category": "Core",
        "default": "true",
        "since": "1.0.0",
        "description": "A boolean specifying if the agent should be active or not.\nWhen active, the agent instruments incoming HTTP requests, tracks errors and collects and sends metrics.\nWhen inactive, the agent works as a noop, not collecting data and not communicating with the APM sever.\nAs this is a reversible switch, agent threads are not being killed when inactivated, but they will be \nmostly idle in this state, so the overhead should be negligible.\n\nYou can use this setting to dynamically disable Elastic APM at runtime."
    },
    {
        "key": "transaction_sample_rate",
        "type": "Double",
        "category": "Core",
        "default": "1.0",
        "tags": ["performance"],
        "since": "1.0.0",
        "validation": {
            "min": 0,
            "max": 1,
            "negativeMatch": false
        },
        "description": "By default, the agent will sample every transaction (e.g. request to your service). To reduce overhead and storage requirements, you can set the sample rate to a value between 0.0 and 1.0. We still record overall time and the result for unsampled transactions, but no context information, labels, or spans."
    },
    {
        "key": "transaction_max_spans",
        "type": "Integer",
        "category": "Core",
        "default": "500",
        "tags": ["performance"],
        "since": "1.0.0",
        "description": "Limits the amount of spans that are recorded per transaction.\n\nThis is helpful in cases where a transaction creates a very high amount of spans (e.g. thousands of SQL queries).\n\nSetting an upper limit will prevent overloading the agent and the APM server with too much work for such edge cases.\n\nA message will be logged when the max number of spans has been exceeded but only at a rate of once every 5 minutes to ensure performance is not impacted."
    },
    {
        "key": "sanitize_field_names",
        "type": "List",
        "category": "Core",
        "default": "password,passwd,pwd,secret,*key,*token*,*session*,*credit*,*card*,authorization,set-cookie",
        "tags": ["security"],
        "since": "1.0.0",
        "description": "Sometimes it is necessary to sanitize the data sent to Elastic APM,\ne.g. remove sensitive data.\n\nConfigure a list of wildcard patterns of field names which should be sanitized.\nThese apply for example to HTTP headers and `application/x-www-form-urlencoded` data.\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive.\n\nNOTE: Data in the query string is considered non-sensitive,\nas sensitive information should not be sent in the query string.\nSee https://www.owasp.org/index.php/Information_exposure_through_query_strings_in_url for more information\n\nNOTE: Review the data captured by Elastic APM carefully to make sure it does not capture sensitive information.\nIf you do find sensitive data in the Elasticsearch index,\nyou should add an additional entry to this list (make sure to also include the default entries)."
    },
    {
        "key": "unnest_exceptions",
        "type": "List",
        "category": "Core",
        "default": "(?-i)*Nested*Exception",
        "since": "1.0.0",
        "description": "When reporting exceptions,\nun-nests the exceptions matching the wildcard pattern.\nThis can come in handy for Spring's `org.springframework.web.util.NestedServletException`,\nfor example.\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive."
    },
    {
        "key": "ignore_exceptions",
        "type": "List",
        "category": "Core",
        "default": "",
        "tags": [],
        "since": "1.11.0",
        "description": "A list of exceptions that should be ignored and not reported as errors.\nThis allows to ignore exceptions thrown in regular control flow that are not actual errors\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive.\n\nExamples:\n\n - `com.mycompany.ExceptionToIgnore`: using fully qualified name\n - `*ExceptionToIgnore`: using wildcard to avoid package name\n - `*exceptiontoignore`: case-insensitive by default\n\nNOTE: Exception inheritance is not supported, thus you have to explicitly list all the thrown exception types"
    },
    {
        "key": "capture_body",
        "type": "Enum",
        "category": "Core",
        "default": "OFF",
        "tags": ["performance"],
        "enum": ["OFF", "ERRORS", "TRANSACTIONS", "ALL"],
        "since": "1.0.0",
        "description": "For transactions that are HTTP requests, the Java agent can optionally capture the request body (e.g. POST \nvariables). For transactions that are initiated by receiving a JMS text message, the agent can capture the \ntextual message body.\n\nIf the HTTP request or the JMS message has a body and this setting is disabled, the body will be shown as [REDACTED].\n\nThis option is case-insensitive.\n\nNOTE: Currently, only UTF-8 encoded plain text HTTP content types are supported.\nThe option <<config-capture-body-content-types>> determines which content types are captured.\n\nWARNING: Request bodies often contain sensitive values like passwords, credit card numbers etc.\nIf your service handles data like this, we advise to only enable this feature with care.\nTurning on body capturing can also significantly increase the overhead in terms of heap usage,\nnetwork utilisation and Elasticsearch index size."
    },
    {
        "key": "capture_headers",
        "type": "Boolean",
        "category": "Core",
        "default": "true",
        "tags": ["performance"],
        "since": "1.0.0",
        "description": "If set to `true`, the agent will capture request and response headers, including cookies.\n\nNOTE: Setting this to `false` reduces network bandwidth, disk space and object allocations."
    },
    {
        "key": "central_config",
        "type": "Boolean",
        "category": "Core",
        "default": "true",
        "tags": [],
        "since": "1.8.0",
        "description": "When enabled, the agent will make periodic requests to the APM Server to fetch updated configuration."
    },
    {
        "key": "use_elastic_traceparent_header",
        "type": "Boolean",
        "category": "Core",
        "default": "true",
        "tags": [],
        "since": "1.14.0",
        "description": "To enable {apm-overview-ref-v}/distributed-tracing.html[distributed tracing], the agent\nadds trace context headers to outgoing requests (like HTTP requests, Kafka records, gRPC requests etc.).\nThese headers (`traceparent` and `tracestate`) are defined in the\nhttps://www.w3.org/TR/trace-context-1/[W3C Trace Context] specification.\n\nWhen this setting is `true`, the agent will also add the header `elastic-apm-traceparent`\nfor backwards compatibility with older versions of Elastic APM agents."
    },
    {
        "key": "server_urls",
        "type": "List",
        "category": "Reporter",
        "default": "http://localhost:8200",
        "since": "1.0.0",
        "description": "The URLs must be fully qualified, including protocol (http or https) and port.\n\nFails over to the next APM Server URL in the event of connection errors.\nAchieves load-balancing by shuffling the list of configured URLs.\nWhen multiple agents are active, they'll tend towards spreading evenly across the set of servers due to randomization.\n\nIf outgoing HTTP traffic has to go through a proxy,you can use the Java system properties `http.proxyHost` and `http.proxyPort` to set that up.\nSee also [Java's proxy documentation](https://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html) for more information.\n\nNOTE: This configuration can only be reloaded dynamically as of 1.8.0"
    },
    {
        "key": "server_timeout",
        "type": "TimeDuration",
        "category": "Reporter",
        "default": "5s",
        "since": "1.0.0",
        "description": "If a request to the APM server takes longer than the configured timeout,\nthe request is cancelled and the event (exception or transaction) is discarded.\nSet to 0 to disable timeouts.\n\nWARNING: If timeouts are disabled or set to a high value, your app could experience memory issues if the APM server times out."
    },
    {
        "key": "max_queue_size",
        "type": "Integer",
        "category": "Reporter",
        "default": "512",
        "since": "1.0.0",
        "description": "The maximum size of buffered events.\n\nEvents like transactions and spans are buffered when the agent can't keep up with sending them to the APM Server or if the APM server is down.\n\nIf the queue is full, events are rejected which means you will lose transactions and spans in that case.\nThis guards the application from crashing in case the APM server is unavailable for a longer period of time.\n\nA lower value will decrease the heap overhead of the agent,\nwhile a higher value makes it less likely to lose events in case of a temporary spike in throughput."
    },
    {
        "key": "api_request_time",
        "type": "TimeDuration",
        "category": "Reporter",
        "default": "10s",
        "since": "1.0.0",
        "description": "Maximum time to keep an HTTP request to the APM Server open for.\n\nNOTE: This value has to be lower than the APM Server's `read_timeout` setting."
    },
    {
        "key": "api_request_size",
        "type": "ByteValue",
        "category": "Reporter",
        "default": "768kb",
        "since": "1.0.0",
        "description": "The maximum total compressed size of the request body which is sent to the APM server intake api via a chunked encoding (HTTP streaming).\nNote that a small overshoot is possible.\n\nAllowed byte units are `b`, `kb` and `mb`. `1kb` is equal to `1024b`."
    },
    {
        "key": "application_packages",
        "type": "Collection",
        "category": "Stacktrace",
        "default": "",
        "since": "1.0.0",
        "description": "Used to determine whether a stack trace frame is an 'in-app frame' or a 'library frame'.\nThis allows the APM app to collapse the stack frames of library code,\nand highlight the stack frames that originate from your application.\nMultiple root packages can be set as a comma-separated list;\nthere's no need to configure sub-packages.\nBecause this setting helps determine which classes to scan on startup,\nsetting this option can also improve startup time.\n\nYou must set this option in order to use the API annotations `@CaptureTransaction` and `@CaptureSpan`.\n\n**Example**\n\nMost Java projects have a root package, e.g. `com.myproject`. You can set the application package using Java system properties:\n`-Delastic.apm.application_packages=com.myproject`\n\nIf you are only interested in specific subpackages, you can separate them with commas:\n`-Delastic.apm.application_packages=com.myproject.api,com.myproject.impl`"
    },
    {
        "key": "stack_trace_limit",
        "type": "Integer",
        "category": "Stacktrace",
        "default": "50",
        "tags": ["performance"],
        "since": "1.0.0",
        "description": "Setting it to 0 will disable stack trace collection. Any positive integer value will be used as the maximum number of frames to collect. Setting it -1 means that all frames will be collected."
    },
    {
        "key": "span_frames_min_duration",
        "type": "TimeDuration",
        "category": "Stacktrace",
        "default": "5ms",
        "tags": ["performance"],
        "since": "1.0.0",
        "description": "In its default settings, the APM agent will collect a stack trace with every recorded span.\nWhile this is very helpful to find the exact place in your code that causes the span, collecting this stack trace does have some overhead. \nWhen setting this option to a negative value, like `-1ms`, stack traces will be collected for all spans. Setting it to a positive value, e.g. `5ms`, will limit stack trace collection to spans with durations equal to or longer than the given value, e.g. 5 milliseconds.\n\nTo disable stack trace collection for spans completely, set the value to `0ms`."
    },
    {
        "key": "log_level",
        "type": "Enum",
        "category": "Logging",
        "default": "INFO",
        "enum": ["ERROR", "WARN", "INFO", "DEBUG", "TRACE"],
        "since": "1.0.0",
        "description": "Sets the logging level for the agent.\n\nThis option is case-insensitive."
    },
    {
        "key": "enable_log_correlation",
        "type": "Boolean",
        "category": "Logging",
        "default": "false",
        "since": "1.0.0",
        "description": "A boolean specifying if the agent should integrate into SLF4J's https://www.slf4j.org/api/org/slf4j/MDC.html[MDC] to enable trace-log correlation.\nIf set to `true`, the agent will set the `trace.id` and `transaction.id` for the currently active spans and transactions to the MDC.\nSee <<log-correlation>> for more details.\n\nNOTE: While it's allowed to enable this setting at runtime, you can't disable it without a restart."
    },
    {
        "key": "capture_body_content_types",
        "type": "List",
        "category": "HTTP",
        "default": "application/x-www-form-urlencoded*,text/*,application/json*,application/xml*",
        "tags": ["performance"],
        "since": "1.5.0",
        "description": "Configures which content types should be recorded.\n\nThe defaults end with a wildcard so that content types like `text/plain; charset=utf-8` are captured as well.\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive."
    },
    {
        "key": "ignore_urls",
        "type": "List",
        "category": "HTTP",
        "default": "\/VAADIN/*,/heartbeat*,/favicon.ico,*.js,*.css,*.jpg,*.jpeg,*.png,*.gif,*.webp,*.svg,*.woff,*.woff2",
        "since": "1.0.0",
        "description": "Used to restrict requests to certain URLs from being instrumented.\n\nThis property should be set to an array containing one or more strings.\nWhen an incoming HTTP request is detected, its URL will be tested against each element in this list.\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive.\n\nNOTE: All errors that are captured during a request to an ignored URL are still sent to the APM Server regardless of this setting."
    },
    {
        "key": "ignore_user_agents",
        "type": "List",
        "category": "HTTP",
        "default": "",
        "since": "1.0.0",
        "description": "Used to restrict requests from certain User-Agents from being instrumented.\n\nWhen an incoming HTTP request is detected,\nthe User-Agent from the request headers will be tested against each element in this list.\nExample: `curl/*`, `*pingdom*`\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive.\n\nNOTE: All errors that are captured during a request by an ignored user agent are still sent to the APM Server regardless of this setting."
    },
    {
        "key": "url_groups",
        "type": "List",
        "category": "HTTP",
        "default": "",
        "since": "1.0.0",
        "description": "This option is only considered, when `use_path_as_transaction_name` is active.\n\nWith this option, you can group several URL paths together by using a wildcard expression like `/user/*`.\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive."
    },
    {
        "key": "ignore_message_queues",
        "type": "List",
        "category": "Messaging",
        "default": "",
        "since": "1.0.0",
        "description": "Used to filter out specific messaging queues/topics from being traced. \n\nThis property should be set to an array containing one or more strings.\nWhen set, sends-to and receives-from the specified queues/topic will be ignored.\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive."
    },
    {
        "key": "capture_jmx_metrics",
        "type": "List",
        "category": "JMX",
        "default": "",
        "tags": [],
        "since": "1.11.0",
        "description": "Report metrics from JMX to the APM Server\n\nCan contain multiple comma separated JMX metric definitions:\n\n----\nobject_name[<JMX object name pattern>] attribute[<JMX attribute>:metric_name=<optional metric name>]\n----\n\n* `object_name`:\n+\nFor more information about the JMX object name pattern syntax,\nsee the https://docs.oracle.com/javase/7/docs/api/javax/management/ObjectName.html[`ObjectName` Javadocs].\n* `attribute`:\n+\nThe name of the JMX attribute.\nThe JMX value has to be either a `Number` or a composite where the composite items are numbers.\nThis element can be defined multiple times.\nAn attribute can contain optional properties.\nThe syntax for that is the same as for https://docs.oracle.com/javase/7/docs/api/javax/management/ObjectName.html[`ObjectName`].\n+\n** `metric_name`:\n+\nA property within `attribute`.\nThis is the name under which the metric will be stored.\nSetting this is optional and will be the same as the `attribute` if not set.\nNote that all JMX metric names will be prefixed with `jvm.jmx.` by the agent.\n\nThe agent creates `labels` for each link:https://docs.oracle.com/javase/7/docs/api/javax/management/ObjectName.html#getKeyPropertyList()[JMX key property] such as `type` and `name`.\n\nThe link:https://docs.oracle.com/javase/7/docs/api/javax/management/ObjectName.html[JMX object name pattern] supports wildcards.\nIn this example, the agent will create a metricset for each memory pool `name` (such as `G1 Old Generation` and `G1 Young Generation`)\n\n----\nobject_name[java.lang:type=GarbageCollector,name=*] attribute[CollectionCount:metric_name=collection_count] attribute[CollectionTime]\n----\n\nThe resulting documents in Elasticsearch look similar to these (metadata omitted for brevity):\n\n[source,json]\n----\n{\n  \"@timestamp\": \"2019-08-20T16:51:07.512Z\",\n  \"jvm\": {\n    \"jmx\": {\n      \"collection_count\": 0,\n      \"CollectionTime\":   0\n    }\n  },\n  \"labels\": {\n    \"type\": \"GarbageCollector\",\n    \"name\": \"G1 Old Generation\"\n  }\n}\n----\n\n[source,json]\n----\n{\n  \"@timestamp\": \"2019-08-20T16:51:07.512Z\",\n  \"jvm\": {\n    \"jmx\": {\n      \"collection_count\": 2,\n      \"CollectionTime\":  11\n    }\n  },\n  \"labels\": {\n    \"type\": \"GarbageCollector\",\n    \"name\": \"G1 Young Generation\"\n  }\n}\n----\n\n\nThe agent also supports composite values for the attribute value.\nIn this example, `HeapMemoryUsage` is a composite value, consisting of `committed`, `init`, `used` and `max`.\n----\nobject_name[java.lang:type=Memory] attribute[HeapMemoryUsage:metric_name=heap] \n----\n\nThe resulting documents in Elasticsearch look similar to this:\n\n[source,json]\n----\n{\n  \"@timestamp\": \"2019-08-20T16:51:07.512Z\",\n  \"jvm\": {\n    \"jmx\": {\n      \"heap\": {\n        \"max\":      4294967296,\n        \"init\":      268435456,\n        \"committed\": 268435456,\n        \"used\":       22404496\n      }\n    }\n  },\n  \"labels\": {\n    \"type\": \"Memory\"\n  }\n}\n----\n"
    },
    {
        "key": "profiling_spans_enabled",
        "type": "Boolean",
        "category": "Profiling",
        "default": "false",
        "tags": [],
        "since": "1.14.0",
        "description": "Set to `true` to make the agent create spans for method executions based on\nhttps://github.com/jvm-profiling-tools/async-profiler[async-profiler], a sampling aka statistical profiler.\n\nIf this is enabled, the agent will start a profiling session every\n<<config-profiling-interval, `profiling_interval`>> which lasts for <<config-profiling-duration, `profiling_duration`>>.\nIf a transaction happens within a profiling session,\nthe agent creates spans for slow methods.\n\nDue to the nature of how sampling profilers work,\nthe duration of the inferred spans are not exact, but only estimations.\nThe <<config-profiling-sampling-interval, `profiling_sampling_interval`>> lets you fine tune the trade-off between accuracy and overhead.\n\nThe inferred spans are created after a profiling session has ended.\nThis means there is a delay between the regular and the inferred spans being visible in the UI.\n\nNOTE: This feature is not available on Windows"
    },
    {
        "key": "profiling_sampling_interval",
        "type": "TimeDuration",
        "category": "Profiling",
        "default": "20ms",
        "tags": [],
        "since": "1.14.0",
        "validation": {
            "min": "1ms",
            "max": "1s",
            "negativeMatch": false
        },
        "description": "The frequency at which stack traces are gathered within a profiling session.\nThe lower you set it, the more accurate the durations will be.\nThis comes at the expense of higher overhead and more spans for potentially irrelevant operations.\nThe minimal duration of a profiling-inferred span is the same as the value of this setting."
    },
    {
        "key": "profiling_spans_min_duration",
        "type": "TimeDuration",
        "category": "Profiling",
        "default": "0ms",
        "tags": [],
        "since": "1.14.0",
        "validation": {
            "min": "0ms",
            "negativeMatch": false
        },
        "description": "The minimum duration of an inferred span.\nNote that the min duration is also implicitly set by the sampling interval.\nHowever, increasing the sampling interval also decreases the accuracy of the duration of inferred spans."
    },
    {
        "key": "profiling_included_classes",
        "type": "List",
        "category": "Profiling",
        "default": "*",
        "tags": [],
        "since": "1.14.0",
        "description": "If set, the agent will only create inferred spans for methods which match this list.\nSetting a value may slightly increase performance and can reduce clutter by only creating spans for the classes you are interested in.\nExample: `org.example.myapp.*`\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive."
    },
    {
        "key": "profiling_excluded_classes",
        "type": "List",
        "category": "Profiling",
        "default": "(?-i)java.*,(?-i)javax.*,(?-i)sun.*,(?-i)com.sun.*,(?-i)jdk.*,(?-i)org.apache.tomcat.*,(?-i)org.apache.catalina.*,(?-i)org.apache.coyote.*,(?-i)org.jboss.as.*,(?-i)org.glassfish.*,(?-i)org.eclipse.jetty.*,(?-i)com.ibm.websphere.*",
        "tags": [],
        "since": "1.14.0",
        "description": "Excludes classes for which no profiler-inferred spans should be created.\n\nThis option supports the wildcard `*`, which matches zero or more characters.\nExamples: `/foo/*/bar/*/baz*`, `*foo*`.\nMatching is case insensitive by default.\nPrepending an element with `(?-i)` makes the matching case sensitive."
    },
    {
        "key": "profiling_interval",
        "type": "TimeDuration",
        "category": "Profiling",
        "default": "61s",
        "tags": [],
        "since": "1.14.0",
        "validation": {
            "min": "0ms",
            "negativeMatch": false
        },
        "description": "The interval at which profiling sessions should be started."
    },
    {
        "key": "profiling_duration",
        "type": "TimeDuration",
        "category": "Profiling",
        "default": "10s",
        "tags": [],
        "since": "1.14.0",
        "validation": {
            "min": "1s",
            "negativeMatch": false
        },
        "description": "The duration of a profiling session.\nFor sampled transactions which fall within a profiling session (they start after and end before the session),\nso-called inferred spans will be created.\nThey appear in the trace waterfall view like regular spans.\n\nNOTE: It is not recommended to set much higher durations as it may fill the activation events file and async-profiler's frame buffer.\nWarnings will be logged if the activation events file is full.\nIf you want to have more profiling coverage, try decreasing <<config-profiling-interval, `profiling_interval`>>."
    }
]
