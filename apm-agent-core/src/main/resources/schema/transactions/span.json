{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "resource:/schema/transactions/span.json",
    "type": "object",
    "properties": {
        "id": {
          "description": "Unique within the corresponding trace, hex encoded 64 random bits",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{16}$"
        },
        "trace_id": {
            "type": "string",
            "description": "UUID for the trace, hex encoded 128 random bits",
            "pattern": "^[a-fA-F0-9]{32}$"
        },
        "parent_id": {
            "type": "string",
            "description": "ID for the parent (transaction or span), hex encoded 64 random bits",
            "pattern": "^[a-fA-F0-9]{16}$"
        },
        "transaction_id": {
            "type": "string",
            "description": "ID for the transaction this span belongs to, hex encoded 64 random bits",
            "pattern": "^[a-fA-F0-9]{16}$"
        },
        "timestamp": {
            "type": ["string", "integer"],
            "description": "Recorded time of the span, UTC based and formatted as YYYY-MM-DDTHH:mm:ss.sssZ"
        },
        "parent": {
            "deprecated": true,
            "type": ["integer", "null"],
            "description": "The locally unique ID of the parent of the span."
        },
        "context": {
            "type": ["object", "null"],
            "description": "Any other arbitrary data captured by the agent, optionally provided by the user",
            "properties": {
                "db": {
                    "type": ["object", "null"],
                    "description": "An object containing contextual data for database spans",
                    "properties": {
                        "instance": {
                           "type": ["string", "null"],
                           "description": "Database instance name"
                        },
                        "statement": {
                           "type": ["string", "null"],
                           "description": "A database statement (e.g. query) for the given database type"
                        },
                        "type": {
                           "type": ["string", "null"],
                           "description": "Database type. For any SQL database, \"sql\". For others, the lower-case database category, e.g. \"cassandra\", \"hbase\", or \"redis\""
                        },
                        "user": {
                           "type": ["string", "null"],
                           "description": "Username for accessing database"
                        },
                        "link": {
                           "type": ["string", "null"],
                           "description": "DB Link for connections between 2 databases"
                        }
                    }
                }
            }
        },
        "duration": {
            "type": "number",
            "description": "Duration of the span in milliseconds"
        },
        "name": {
            "type": "string",
            "description": "Generic designation of a span in the scope of a transaction",
            "maxLength": 1024
        },
        "stacktrace": {
            "type": ["array", "null"],
            "description": "List of stack frames with variable attributes (eg: lineno, filename, etc)",
            "items": {
                "$ref": "../stacktrace_frame.json"
            },
            "minItems": 0
        },
        "start": {
            "type": "number",
            "description": "Offset relative to the transaction's timestamp identifying the start of the span, in milliseconds"
        },
        "type": {
            "type": "string",
            "description": "Keyword of specific relevance in the service's domain (eg: 'db.postgresql.query', 'template.erb', etc)",
            "maxLength": 1024
        }
    },
    "dependencies": {
        "parent": {
            "required": ["id"]
        }
    },
    "required": ["duration", "name", "type", "timestamp", "transaction_id"]
}
