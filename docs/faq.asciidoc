[[faq]]
== Frequently Asked Questions

[float]
[[faq-how-does-it-work]]
=== How does the agent work?
The agent auto-instruments known frameworks and libraries and records interesting events,
like HTTP requests and DB queries.

That works by leveraging the capability of the JVM to instrument the bytecode of classes so that for the supported technologies,
there are no code changes required.
The agent automatically injects small pieces of code before and after interesting events to measure their duration and metadata,
like the DB statement,
as well as HTTP related information,
like the URL, parameters, and headers.
For example, if the agent detects that a class extending `javax.servlet.HttpServlet` is loaded,
it injects monitoring code before and after the servlet invocation.

[float]
[[faq-installation]]
=== How do I install the agent?
You just have to download the agent,
which is a single file and set a few JVM flags before starting the application.

The most important option to set is the `-javaagent` flag which tells the JVM where to find the agent file.

Then there are numerous optional configuration options you can set to customize the agent's behavior.
The most important ones are <<config-service-name>> (identifier for the service),
<<config-application-packages>> (what's the namespace of your application) and <<config-server-urls>> (where to send the data).
More details can be found in the <<get-started, getting started docs>>.


[float]
[[faq-bytecode-instrumentation]]
=== Is the agent doing bytecode instrumentation?
Yes

[float]
[[faq-recompile]]
=== Do I need to re-compile my application?
No

[float]
[[faq-unsupported-technologies]]
=== What to do when the agent does not support the technologies I'm using?
You can use the <<public-api,public API>> to create custom spans and transactions,
participate in the
https://docs.google.com/forms/d/e/1FAIpQLScd0RYiwZGrEuxykYkv9z8Hl3exx_LKCtjsqEo1OWx8BkLrOQ/viewform?usp=sf_link[survey]
to vote for prioritizing adding support for the technologies you are using, or
https://github.com/elastic/apm-agent-java/blob/master/CONTRIBUTING.md[get involved in the agent development]
and contribute to the auto-instrumentation capabilities of the agent.
