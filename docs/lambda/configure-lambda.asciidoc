// tag::console-with-agent[]

To configure APM through the AWS Management Console:

1. Navigate to your function in the AWS Management Console
2. Click on the _Configuration_ tab
3. Click on _Environment variables_
4. Add the following required variables:

[source,bash]
----
AWS_LAMBDA_EXEC_WRAPPER       = /opt/elastic-apm-handler  # use this exact fixed value
ELASTIC_APM_LAMBDA_APM_SERVER = <YOUR-APM-SERVER-URL>     # this is your APM Server URL
ELASTIC_APM_SECRET_TOKEN      = <YOUR-APM-SECRET-TOKEN>   # this is your APM secret token
----

--
include::{apm-aws-lambda-root}/docs/images/images.asciidoc[tag=java-env-vars]
--

// end::console-with-agent[]

// tag::cli-with-agent[]

To configure APM through the AWS command line interface execute the following command:

[source,bash]
----
aws lambda update-function-configuration --function-name yourLambdaFunctionName \
    --environment "Variables={AWS_LAMBDA_EXEC_WRAPPER=/opt/elastic-apm-handler,ELASTIC_APM_LAMBDA_APM_SERVER=<YOUR-APM-SERVER-URL>,ELASTIC_APM_SECRET_TOKEN=<YOUR-APM-SECRET-TOKEN>}"
----

// end::cli-with-agent[]

// tag::sam-with-agent[]

In your SAM `template.yml` file configure the following environment variables:

[source,yml]
----
...
Resources:
  yourLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      ...
      Environment:
          Variables:
            AWS_LAMBDA_EXEC_WRAPPER: /opt/elastic-apm-handler
            ELASTIC_APM_LAMBDA_APM_SERVER: <YOUR-APM-SERVER-URL>
            ELASTIC_APM_SECRET_TOKEN: <YOUR-APM-SECRET-TOKEN>
...
----

// end::sam-with-agent[]

// tag::serverless-with-agent[]

In your `serverless.yml` file configure the following environment variables:

[source,yml]
----
...
functions:
  yourLambdaFunction:
    ...
    environment:
      AWS_LAMBDA_EXEC_WRAPPER: /opt/elastic-apm-handler
      ELASTIC_APM_LAMBDA_APM_SERVER: <YOUR-APM-SERVER-URL>
      ELASTIC_APM_SECRET_TOKEN: <YOUR-APM-SECRET-TOKEN>
...
----

// end::serverless-with-agent[]

// tag::terraform-with-agent[]
In your Terraform file configure the following environment variables:

[source,terraform]
----
...
resource "aws_lambda_function" "your_lambda_function" {
  ...
  environment {
    variables = {
      AWS_LAMBDA_EXEC_WRAPPER       = "/opt/elastic-apm-handler"
      ELASTIC_APM_LAMBDA_APM_SERVER = "<YOUR-APM-SERVER-URL>"
      ELASTIC_APM_SECRET_TOKEN      = "<YOUR-APM-SECRET-TOKEN>"
    }
  }
}
...
----

// end::terraform-with-agent[]

// tag::container-with-agent[]
Environment variables configured for an AWS Lambda function are passed to the container running the lambda function.
You can use one of the other options (through AWS Web Console, AWS CLI, etc.) to configure the environment variables
or https://docs.docker.com/engine/reference/builder/#env[define them directly in your Dockerfile].

We recommend to use an https://gallery.ecr.aws/lambda/java[official AWS Lambda base image] for your function's container image.
In this case, you will only need to configure the following three environment variables:

[source,bash]
----
AWS_LAMBDA_EXEC_WRAPPER       = "/opt/elastic-apm-handler"
ELASTIC_APM_LAMBDA_APM_SERVER = <YOUR-APM-SERVER-URL>     # this is your APM Server URL
ELASTIC_APM_SECRET_TOKEN      = <YOUR-APM-SECRET-TOKEN>   # this is your APM secret token
----

If your container image is based on a different base image (not including the AWS Lambda runtime utilities),
the `AWS_LAMBDA_EXEC_WRAPPER` configuration option won't be supported. In this case, you will need to define an extended
set of environment variables (which, in the above case, are set through the wrapper script):

[source,bash]
----
JAVA_TOOL_OPTIONS              = "-javaagent:/opt/elastic-apm-agent.jar"
ELASTIC_APM_AWS_LAMBDA_HANDLER = <HANDLER_CLASS_NAME> # the fully qualified class name of your Lambda handler
ELASTIC_APM_METRICS_INTERVAL   = "0s"
ELASTIC_APM_CENTRAL_CONFIG     = "false"
ELASTIC_APM_CLOUD_PROVIDER     = "none"
ELASTIC_APM_LAMBDA_APM_SERVER  = <YOUR-APM-SERVER-URL>     # this is your APM Server URL
ELASTIC_APM_SECRET_TOKEN       = <YOUR-APM-SECRET-TOKEN>   # this is your APM secret token
----

// end::container-with-agent[]
