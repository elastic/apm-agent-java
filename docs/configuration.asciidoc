////
This file is auto generated

Please only make changes in configuration.asciidoc.ftl
////
[configuration]
== Configuration
To adapt the Elastic APM agent to your needs,
you can configure it using different configuration sources,
which have different naming conventions for the property key.
The first configuration sources override the configuration values of over the latter sources.

[arabic]
. Java system properties +
 All configuration keys are prefixed with `elastic.apm.`
. Environment variables +
 All configuration keys are in uppercase and prefixed with `ELASTIC_APM_`
. `elasticapm.properties` file +
 This file has to be placed under `src/main/resources/elasticapm.properties`

Configuration options marked with Dynamic true can be changed at runtime
via configuration sources which support dynamic reloading.
Java system properties can be set from within the application.
The `elasticapm.properties` file will be regularly polled for updates.


[[core]]
=== Core configuration options
[float]
[[config-active]]
==== `active`

A boolean specifying if the agent should be active or not. If active, the agent will instrument incoming HTTP requests and track errors.

You can use this setting to dynamically disable Elastic APM at runtime.


[options="header"]
|============
| Default                 | Type                | Dynamic
| true | Boolean | true
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.active` | `ELASTIC_APM_ACTIVE` | `active`
|============


[float]
[[config-instrument]]
==== `instrument`

A boolean specifying if the agent should instrument the application to collect performance metrics for the app. When set to false, Elastic APM will not affect your application at all.

NOTE: Both active and instrument needs to be true for instrumentation to be running.


[options="header"]
|============
| Default                 | Type                | Dynamic
| true | Boolean | false
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.instrument` | `ELASTIC_APM_INSTRUMENT` | `instrument`
|============


[float]
[[config-service-name]]
==== `service_name`

This is used to keep all the errors and transactions of your service together and is the primary filter in theElastic APM user interface.

NOTE: The service name must conform to this regular expression: ^[a-zA-Z0-9 _-]+$. In less regexy terms: Your service name must only contain characters from the ASCII alphabet, numbers, dashes, underscores and spaces.


[options="header"]
|============
| Default                 | Type                | Dynamic
| `<none>` | String | false
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.service_name` | `ELASTIC_APM_SERVICE_NAME` | `service_name`
|============


[float]
[[config-service-version]]
==== `service_version`

A version string for the currently deployed version of the service. If you don’t version your deployments, the recommended value for this field is the commit identifier of the deployed revision, e.g. the output of git rev-parse HEAD.


[options="header"]
|============
| Default                 | Type                | Dynamic
| `<none>` | String | false
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.service_version` | `ELASTIC_APM_SERVICE_VERSION` | `service_version`
|============


[float]
[[config-environment]]
==== `environment`

The name of the environment this service is deployed in, e.g. "production" or "staging".


[options="header"]
|============
| Default                 | Type                | Dynamic
| `<none>` | String | false
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.environment` | `ELASTIC_APM_ENVIRONMENT` | `environment`
|============


[float]
[[config-sample-rate]]
==== `sample_rate`

By default, the agent will sample every transaction (e.g. request to your service). To reduce overhead and storage requirements, you can set the sample rate to a value between 0.0 and 1.0. We still record overall time and the result for unsampled transactions, but no context information, tags, or spans.


[options="header"]
|============
| Default                 | Type                | Dynamic
| 1.0 | Double | true
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.sample_rate` | `ELASTIC_APM_SAMPLE_RATE` | `sample_rate`
|============


[float]
[[config-transaction-max-spans]]
==== `transaction_max_spans`

Limits the amount of spans that are recorded per transaction.

This is helpful in cases where a transaction creates a very high amount of spans (e.g. thousands of SQL queries).

Setting an upper limit will prevent overloading the agent and the APM server with too much work for such edge cases.


[options="header"]
|============
| Default                 | Type                | Dynamic
| 500 | Integer | true
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.transaction_max_spans` | `ELASTIC_APM_TRANSACTION_MAX_SPANS` | `transaction_max_spans`
|============


[[http]]
=== HTTP configuration options
[float]
[[config-capture-body]]
==== `capture_body`

For transactions that are HTTP requests, the Java agent can optionally capture the request body (e.g. POST variables).

Possible values: errors, transactions, all, off.

If the request has a body and this setting is disabled, the body will be shown as [REDACTED].

For requests with a content type of multipart/form-data, any uploaded files will be referenced in a special _files key. It contains the name of the field, and the name of the uploaded file, if provided.

WARNING: request bodies often contain sensitive values like passwords, credit card numbers etc.If your service handles data like this, we advise to only enable this feature with care.


[options="header"]
|============
| Default                 | Type                | Dynamic
| OFF | EventType | true
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.capture_body` | `ELASTIC_APM_CAPTURE_BODY` | `capture_body`
|============


[float]
[[config-ignore-urls-starting-with]]
==== `ignore_urls_starting_with`

Used to restrict requests to certain URL’s from being instrumented.

This property should be set to an array containing one or more strings. When an incoming HTTP request is detected, its URL will be tested against each element in this list. If the URL starts with an element in the array.

NOTE: All errors that are captured during a request to an ignored URL are still sent to the APM Server regardless of this setting.


[options="header"]
|============
| Default                 | Type                | Dynamic
| `<none>` | Collection | true
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.ignore_urls_starting_with` | `ELASTIC_APM_IGNORE_URLS_STARTING_WITH` | `ignore_urls_starting_with`
|============


[[reporter]]
=== Reporter configuration options
[float]
[[config-secret-token]]
==== `secret_token`

This string is used to ensure that only your agents can send data to your APM server.

Both the agents and the APM server have to be configured with the same secret token.Use if APM Server requires a token.


[options="header"]
|============
| Default                 | Type                | Dynamic
| `<none>` | String | false
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.secret_token` | `ELASTIC_APM_SECRET_TOKEN` | `secret_token`
|============


[float]
[[config-server-url]]
==== `server_url`

The URL must be fully qualified, including protocol (http or https) and port.


[options="header"]
|============
| Default                 | Type                | Dynamic
| http://localhost:8200 | URL | false
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.server_url` | `ELASTIC_APM_SERVER_URL` | `server_url`
|============


[float]
[[config-server-timeout]]
==== `server_timeout`

If a request to the APM server takes longer than the configured timeout, the request is cancelled and the event (exception or transaction) is discarded. Set to None to disable timeouts.

WARNING:  If timeouts are disabled or set to a high value, your app could experience memory issues if the APM server times out.


[options="header"]
|============
| Default                 | Type                | Dynamic
| 5 | Integer | false
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.server_timeout` | `ELASTIC_APM_SERVER_TIMEOUT` | `server_timeout`
|============


[float]
[[config-verify-server-cert]]
==== `verify_server_cert`

By default, the agent verifies the SSL certificate if you use an HTTPS connection to the APM server.

Verification can be disabled by changing this setting to false.


[options="header"]
|============
| Default                 | Type                | Dynamic
| true | Boolean | false
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.verify_server_cert` | `ELASTIC_APM_VERIFY_SERVER_CERT` | `verify_server_cert`
|============


[float]
[[config-flush-interval]]
==== `flush_interval`

Interval with which transactions should be sent to the APM server, in seconds.

A lower value will increase the load on your APM server, while a higher value can increase the memory pressure on your app.

A higher value also impacts the time until transactions are indexed and searchable in Elasticsearch.


[options="header"]
|============
| Default                 | Type                | Dynamic
| 1 | Integer | false
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.flush_interval` | `ELASTIC_APM_FLUSH_INTERVAL` | `flush_interval`
|============


[float]
[[config-max-queue-size]]
==== `max_queue_size`

Maximum queue length of transactions before sending transactions to the APM server.

A lower value will increase the load on your APM server,while a higher value can increase the memory pressure of your app.

A higher value also impacts the time until transactions are indexed and searchable in Elasticsearch.

This setting is useful to limit memory consumption if you experience a sudden spike of traffic.


[options="header"]
|============
| Default                 | Type                | Dynamic
| 500 | Integer | true
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.max_queue_size` | `ELASTIC_APM_MAX_QUEUE_SIZE` | `max_queue_size`
|============


[[stacktrace]]
=== Stacktrace configuration options
[float]
[[config-application-packages]]
==== `application_packages`

Used to determine whether a stack trace frame is an 'in-app frame' or a 'library frame'.


[options="header"]
|============
| Default                 | Type                | Dynamic
| `<none>` | Collection | true
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.application_packages` | `ELASTIC_APM_APPLICATION_PACKAGES` | `application_packages`
|============


[float]
[[config-stack-trace-limit]]
==== `stack_trace_limit`

Setting it to 0 will disable stack trace collection. Any positive integer value will be used as the maximum number of frames to collect. Setting it -1 means that all frames will be collected.


[options="header"]
|============
| Default                 | Type                | Dynamic
| 50 | Integer | true
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.stack_trace_limit` | `ELASTIC_APM_STACK_TRACE_LIMIT` | `stack_trace_limit`
|============


[float]
[[config-span-frames-min-duration-ms]]
==== `span_frames_min_duration_ms`

In its default settings, the APM agent will collect a stack trace with every recorded span.
While this is very helpful to find the exact place in your code that causes the span, collecting this stack trace does have some overhead. 
With the default setting, `-1`, stack traces will be collected for all spans. Setting it to a positive value, e.g. `5`, will limit stack trace collection to spans with durations equal or longer than the given value in milliseconds, e.g. 5 milliseconds.

To disable stack trace collection for spans completely, set the value to 0.


[options="header"]
|============
| Default                 | Type                | Dynamic
| 5 | Integer | true
|============


[options="header"]
|============
| Java System Properties      | Environment                            | `elasticapm.properties`
| `elastic.apm.span_frames_min_duration_ms` | `ELASTIC_APM_SPAN_FRAMES_MIN_DURATION_MS` | `span_frames_min_duration_ms`
|============



