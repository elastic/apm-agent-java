////
This file is auto generated

Please only make changes in configuration.asciidoc.ftl
////
[[configuration]]
== Configuration
To adapt the Elastic APM agent to your needs,
you can configure it using different configuration sources,
which have different naming conventions for the property key.
The first configuration sources override the configuration values of over the latter sources.

[arabic]
. Java system properties +
  All configuration keys are prefixed with `elastic.apm.`
. Environment variables +
  All configuration keys are in uppercase and prefixed with `ELASTIC_APM_`
. `elasticapm.properties` file +
  You can place a `elasticapm.properties` in the same directory the agent jar resides in.
  No prefix is required for the configuration keys.

Configuration options marked with Dynamic true can be changed at runtime
via configuration sources which support dynamic reloading.
Java system properties can be set from within the application.

In order to get started with Elastic APM,
the most important configuration options are <<config-service-name>>,
<<config-server-urls>> and <<config-application-packages>>.
So a minimal version of a configuration might look like this:

[source,bash]
.System properties
----
-Delastic.apm.service_name=my-cool-service
-Delastic.apm.application_packages=org.example
-Delastic.apm.server_urls=http://localhost:8300
----

[source,properties]
.elasticapm.properties
----
service_name=my-cool-service
application_packages=org.example
server_urls=http://localhost:8300
----

[source,bash]
.Environment variables
----
ELASTIC_APM_SERVICE_NAME=my-cool-service
ELASTIC_APM_APPLICATION_PACKAGES=org.example
ELASTIC_APM_SERVER_URLS=http://localhost:8300
----

[[config-core]]
=== Core configuration options
[float]
[[config-active]]
==== `active`

A boolean specifying if the agent should be active or not. If active, the agent will instrument incoming HTTP requests and track errors.

You can use this setting to dynamically disable Elastic APM at runtime.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `true` | Boolean | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.active` | `active` | `ELASTIC_APM_ACTIVE`
|============

[float]
[[config-instrument]]
==== `instrument`

A boolean specifying if the agent should instrument the application to collect performance metrics for the app. When set to false, Elastic APM will not affect your application at all.

NOTE: Both active and instrument needs to be true for instrumentation to be running.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `true` | Boolean | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.instrument` | `instrument` | `ELASTIC_APM_INSTRUMENT`
|============

[float]
[[config-service-name]]
==== `service_name`

This is used to keep all the errors and transactions of your service together
and is the primary filter in the Elastic APM user interface.

NOTE: The service name must conform to this regular expression: ^[a-zA-Z0-9 _-]+$. In less regexy terms: Your service name must only contain characters from the ASCII alphabet, numbers, dashes, underscores and spaces.


[options="header"]
|============
| Default                          | Type                | Dynamic
| Name of main class or jar | String | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.service_name` | `service_name` | `ELASTIC_APM_SERVICE_NAME`
|============

[float]
[[config-service-version]]
==== `service_version`

A version string for the currently deployed version of the service. If you donâ€™t version your deployments, the recommended value for this field is the commit identifier of the deployed revision, e.g. the output of git rev-parse HEAD.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `<none>` | String | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.service_version` | `service_version` | `ELASTIC_APM_SERVICE_VERSION`
|============

[float]
[[config-environment]]
==== `environment`

The name of the environment this service is deployed in, e.g. "production" or "staging".NOTE: The APM UI does not fully support the environment setting yet.
You can use the query bar to filter for a specific environment,
but by default the environments will be mixed together.
Also keep that in mind when creating alerts.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `<none>` | String | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.environment` | `environment` | `ELASTIC_APM_ENVIRONMENT`
|============

[float]
[[config-transaction-sample-rate]]
==== `transaction_sample_rate`

By default, the agent will sample every transaction (e.g. request to your service). To reduce overhead and storage requirements, you can set the sample rate to a value between 0.0 and 1.0. We still record overall time and the result for unsampled transactions, but no context information, tags, or spans.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `1.0` | Double | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.transaction_sample_rate` | `transaction_sample_rate` | `ELASTIC_APM_TRANSACTION_SAMPLE_RATE`
|============

[float]
[[config-transaction-max-spans]]
==== `transaction_max_spans`

Limits the amount of spans that are recorded per transaction.

This is helpful in cases where a transaction creates a very high amount of spans (e.g. thousands of SQL queries).

Setting an upper limit will prevent overloading the agent and the APM server with too much work for such edge cases.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `500` | Integer | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.transaction_max_spans` | `transaction_max_spans` | `ELASTIC_APM_TRANSACTION_MAX_SPANS`
|============

[float]
[[config-sanitize-field-names]]
==== `sanitize_field_names`

Sometimes it is necessary to sanitize the data sent to Elastic APM,
e.g. remove sensitive data.

Configure a list of wildcard patterns of field names which should be sanitized.
These apply for example to HTTP headers and `application/x-www-form-urlencoded` data.

This option supports the wildcard `*`, which matches zero or more characters.
Examples: `/foo/*/bar/*/baz*`, `*foo*`.
Matching is case insensitive by default.
Prepending an element with `(?-i)` makes the matching case sensitive.

NOTE: Data in the query string is considered non-sensitive,
as sensitive information should not be sent in the query string.
See https://www.owasp.org/index.php/Information_exposure_through_query_strings_in_url for more information

NOTE: Review the data captured by Elastic APM carefully to make sure it does not capture sensitive information.
If you do find sensitive data in the Elasticsearch index,
you should add an additional entry to this list (make sure to also include the default entries).


[options="header"]
|============
| Default                          | Type                | Dynamic
| `password, passwd, pwd, secret, *key, *token*, *session*, *credit*, *card*, authorization, set-cookie` | List | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.sanitize_field_names` | `sanitize_field_names` | `ELASTIC_APM_SANITIZE_FIELD_NAMES`
|============

[float]
[[config-disable-instrumentations]]
==== `disable_instrumentations`

A list of instrumentations which should be disabled.
Valid options are `annotations`, `apache-httpclient`, `elasticsearch-restclient`, `http-client`, `incubating`, `jax-rs`, `jax-rs-annotations`, `jdbc`, `opentracing`, `public-api`, `servlet-api`, `servlet-api-async`, `spring-mvc`, `spring-resttemplate`.
If you want to try out incubating features,
set the value to an empty string.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `incubating` | Collection | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.disable_instrumentations` | `disable_instrumentations` | `ELASTIC_APM_DISABLE_INSTRUMENTATIONS`
|============

[float]
[[config-unnest-exceptions]]
==== `unnest_exceptions`

When reporting exceptions,
un-nests the exceptions matching the wildcard pattern.
This can come in handy for Spring's `org.springframework.web.util.NestedServletException`,
for example.

This option supports the wildcard `*`, which matches zero or more characters.
Examples: `/foo/*/bar/*/baz*`, `*foo*`.
Matching is case insensitive by default.
Prepending an element with `(?-i)` makes the matching case sensitive.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `(?-i)*Nested*Exception` | List | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.unnest_exceptions` | `unnest_exceptions` | `ELASTIC_APM_UNNEST_EXCEPTIONS`
|============

[[config-http]]
=== HTTP configuration options
[float]
[[config-capture-body]]
==== `capture_body`

For transactions that are HTTP requests, the Java agent can optionally capture the request body (e.g. POST variables).

If the request has a body and this setting is disabled, the body will be shown as [REDACTED].

This option is case-insensitive.
NOTE: Currently, only `application/x-www-form-urlencoded` (form parameters) are supported.
Forms which include a file upload (`multipart/form-data`) are not supported.

WARNING: request bodies often contain sensitive values like passwords, credit card numbers etc.If your service handles data like this, we advise to only enable this feature with care.

Valid options: `off`, `errors`, `transactions`, `all`

[options="header"]
|============
| Default                          | Type                | Dynamic
| `OFF` | EventType | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.capture_body` | `capture_body` | `ELASTIC_APM_CAPTURE_BODY`
|============

[float]
[[config-ignore-urls]]
==== `ignore_urls`

Used to restrict requests to certain URLs from being instrumented.

This property should be set to an array containing one or more strings.
When an incoming HTTP request is detected, its URL will be tested against each element in this list.

This option supports the wildcard `*`, which matches zero or more characters.
Examples: `/foo/*/bar/*/baz*`, `*foo*`.
Matching is case insensitive by default.
Prepending an element with `(?-i)` makes the matching case sensitive.

NOTE: All errors that are captured during a request to an ignored URL are still sent to the APM Server regardless of this setting.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `/VAADIN/*, /heartbeat*, /favicon.ico, *.js, *.css, *.jpg, *.jpeg, *.png, *.gif, *.webp, *.svg, *.woff, *.woff2` | List | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.ignore_urls` | `ignore_urls` | `ELASTIC_APM_IGNORE_URLS`
|============

[float]
[[config-ignore-user-agents]]
==== `ignore_user_agents`

Used to restrict requests from certain User-Agents from being instrumented.

When an incoming HTTP request is detected,
the User-Agent from the request headers will be tested against each element in this list.
Example: `curl/*`, `*pingdom*`

This option supports the wildcard `*`, which matches zero or more characters.
Examples: `/foo/*/bar/*/baz*`, `*foo*`.
Matching is case insensitive by default.
Prepending an element with `(?-i)` makes the matching case sensitive.

NOTE: All errors that are captured during a request by an ignored user agent are still sent to the APM Server regardless of this setting.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `<none>` | List | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.ignore_user_agents` | `ignore_user_agents` | `ELASTIC_APM_IGNORE_USER_AGENTS`
|============

[float]
[[config-use-path-as-transaction-name]]
==== `use_path_as_transaction_name`

If set to `true`,
transaction names of unsupported Servlet API-based frameworks will be in the form of `$method $path` instead of just `$method`.

WARNING: If your URLs contain path parameters like `/user/$userId`,
you should be very careful when enabling this flag,
as it can lead to an explosion of transaction groups.
Take a look at the `url_groups` option on how to mitigate this problem by grouping URLs together.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `false` | Boolean | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.use_path_as_transaction_name` | `use_path_as_transaction_name` | `ELASTIC_APM_USE_PATH_AS_TRANSACTION_NAME`
|============

[float]
[[config-url-groups]]
==== `url_groups`

This option is only considered, when `use_path_as_transaction_name` is active.

With this option, you can group several URL paths together by using a wildcard expression like `/user/*`.

This option supports the wildcard `*`, which matches zero or more characters.
Examples: `/foo/*/bar/*/baz*`, `*foo*`.
Matching is case insensitive by default.
Prepending an element with `(?-i)` makes the matching case sensitive.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `<none>` | List | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.url_groups` | `url_groups` | `ELASTIC_APM_URL_GROUPS`
|============

[[config-logging]]
=== Logging configuration options
[float]
[[config-log-level]]
==== `log_level`

Sets the logging level for the agent.

This option is case-insensitive.

Valid options: `ERROR`, `WARN`, `INFO`, `DEBUG`, `TRACE`

[options="header"]
|============
| Default                          | Type                | Dynamic
| `INFO` | Level | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.log_level` | `log_level` | `ELASTIC_APM_LOG_LEVEL`
|============

[float]
[[config-log-file]]
==== `log_file`

Sets the path of the agent logs.
The special value `_AGENT_HOME_` is a placeholder for the folder the elastic-apm-agent.jar is in.
Example: `_AGENT_HOME_/logs/elastic-apm.log`

When set to the special value 'System.out',
the logs are sent to standard out.

NOTE: When logging to a file,
it's content is deleted when the application starts.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `System.out` | String | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.log_file` | `log_file` | `ELASTIC_APM_LOG_FILE`
|============

[float]
[[config-enable-log-correlation]]
==== `enable_log_correlation`

A boolean specifying if the agent should integrate into SLF4J's MDC to enable trace-log correlation.
If set to `true`, the agent will set the `spanId` and `traceId` for the currently active spans and transactions to the MDC.
You can then use the pattern format of your logging implementation to write the MDC values to your log file.
With the help of Filebeat and Logstash or an Elasticsearch ingest pipeline,
you can index your log files and correlate them with APM traces.
With this integration you can get all logs belonging to a particular trace and vice-versa:
for a specific log, see in which context it has been logged and which parameters the user provided. 
While it's allowed to enable this setting at runtime, you can't disable it without a restart.

NOTE: This is an incubating feature and the MDC key names might change.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `false` | Boolean | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.enable_log_correlation` | `enable_log_correlation` | `ELASTIC_APM_ENABLE_LOG_CORRELATION`
|============

[[config-reporter]]
=== Reporter configuration options
[float]
[[config-secret-token]]
==== `secret_token`

This string is used to ensure that only your agents can send data to your APM server.

Both the agents and the APM server have to be configured with the same secret token.
Use if APM Server requires a token.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `<none>` | String | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.secret_token` | `secret_token` | `ELASTIC_APM_SECRET_TOKEN`
|============

[float]
[[config-server-urls]]
==== `server_urls`

The URLs must be fully qualified, including protocol (http or https) and port.

NOTE: Providing multiple URLs only works if intake API v2 is enabled.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `http://localhost:8200` | List | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.server_urls` | `server_urls` | `ELASTIC_APM_SERVER_URLS`
|============

[float]
[[config-server-timeout]]
==== `server_timeout`

If a request to the APM server takes longer than the configured timeout,
the request is cancelled and the event (exception or transaction) is discarded.
Set to 0 to disable timeouts.

WARNING: If timeouts are disabled or set to a high value, your app could experience memory issues if the APM server times out.

Supports the duration suffixes `ms`, `s` and `m`.
Example: `5s`.
The default unit for this option is `s`

[options="header"]
|============
| Default                          | Type                | Dynamic
| `5s` | TimeDuration | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.server_timeout` | `server_timeout` | `ELASTIC_APM_SERVER_TIMEOUT`
|============

[float]
[[config-verify-server-cert]]
==== `verify_server_cert`

By default, the agent verifies the SSL certificate if you use an HTTPS connection to the APM server.

Verification can be disabled by changing this setting to false.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `true` | Boolean | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.verify_server_cert` | `verify_server_cert` | `ELASTIC_APM_VERIFY_SERVER_CERT`
|============

[float]
[[config-flush-interval]]
==== `flush_interval`

Interval with which transactions should be sent to the APM server.

A lower value will increase the load on your APM server,
while a higher value can increase the memory pressure on your app.

A higher value also impacts the time until transactions are indexed and searchable in Elasticsearch.

Supports the duration suffixes `ms`, `s` and `m`.
Example: `1s`.
The default unit for this option is `s`

[options="header"]
|============
| Default                          | Type                | Dynamic
| `1s` | TimeDuration | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.flush_interval` | `flush_interval` | `ELASTIC_APM_FLUSH_INTERVAL`
|============

[float]
[[config-max-queue-size]]
==== `max_queue_size`

The maximum size of buffered events.

Events like transactions and spans are buffered when the agent can't keep up with sending them to the APM Server or if the APM server is down.

If the queue is full, events are rejected which means you will lose transactions and spans in that case.
This guards the application from crashing in case the APM server is unavailable for a longer period of time.

A lower value will decrease the heap overhead of the agent,
while a higher value makes it less likely to lose events in case of a temporary spike in throughput.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `512` | Integer | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.max_queue_size` | `max_queue_size` | `ELASTIC_APM_MAX_QUEUE_SIZE`
|============

[float]
[[config-include-process-args]]
==== `include_process_args`

Whether each transaction should have the process arguments attached.
Disabled by default to save disk space.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `false` | Boolean | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.include_process_args` | `include_process_args` | `ELASTIC_APM_INCLUDE_PROCESS_ARGS`
|============

[float]
[[config-api-request-time]]
==== `api_request_time`

Maximum time to keep an HTTP request to the APM Server open for.

Supports the duration suffixes `ms`, `s` and `m`.
Example: `10s`.
The default unit for this option is `s`

[options="header"]
|============
| Default                          | Type                | Dynamic
| `10s` | TimeDuration | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.api_request_time` | `api_request_time` | `ELASTIC_APM_API_REQUEST_TIME`
|============

[float]
[[config-api-request-size]]
==== `api_request_size`

The maximum total compressed size of the request body which is sent to the APM server intake api via a chunked encoding (HTTP streaming).
Note that a small overshoot is possible.

Allowed byte units are `b`, `kb` and `mb`. `1kb` is equal to `1024b`.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `768kb` | ByteValue | false
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.api_request_size` | `api_request_size` | `ELASTIC_APM_API_REQUEST_SIZE`
|============

[[config-stacktrace]]
=== Stacktrace configuration options
[float]
[[config-application-packages]]
==== `application_packages`

Used to determine whether a stack trace frame is an 'in-app frame' or a 'library frame'.
Setting this option can also improve the startup time.

In order to be able to use the API annotations @CaptureTransaction and @CaptureSpan,
it is required to set these options.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `<none>` | Collection | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.application_packages` | `application_packages` | `ELASTIC_APM_APPLICATION_PACKAGES`
|============

[float]
[[config-stack-trace-limit]]
==== `stack_trace_limit`

Setting it to 0 will disable stack trace collection. Any positive integer value will be used as the maximum number of frames to collect. Setting it -1 means that all frames will be collected.


[options="header"]
|============
| Default                          | Type                | Dynamic
| `50` | Integer | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.stack_trace_limit` | `stack_trace_limit` | `ELASTIC_APM_STACK_TRACE_LIMIT`
|============

[float]
[[config-span-frames-min-duration]]
==== `span_frames_min_duration`

In its default settings, the APM agent will collect a stack trace with every recorded span.
While this is very helpful to find the exact place in your code that causes the span, collecting this stack trace does have some overhead. 
When setting this option to `-1`, stack traces will be collected for all spans. Setting it to a positive value, e.g. `5ms`, will limit stack trace collection to spans with durations equal or longer than the given value, e.g. 5 milliseconds.

To disable stack trace collection for spans completely, set the value to 0.

Supports the duration suffixes `ms`, `s` and `m`.
Example: `5ms`.
The default unit for this option is `ms`

[options="header"]
|============
| Default                          | Type                | Dynamic
| `5ms` | TimeDuration | true
|============


[options="header"]
|============
| Java System Properties      | Property file   | Environment
| `elastic.apm.span_frames_min_duration` | `span_frames_min_duration` | `ELASTIC_APM_SPAN_FRAMES_MIN_DURATION`
|============



[[config-reference-properties-file]]
=== Property file reference

[source,properties]
.elasticapm.properties
----
############################################
# Core                                     #
############################################

# A boolean specifying if the agent should be active or not. If active, the agent will instrument incoming HTTP requests and track errors.
# 
# You can use this setting to dynamically disable Elastic APM at runtime.
#
# This setting can be changed at runtime
# Type: Boolean
# Default value: true
#
# active=true

# A boolean specifying if the agent should instrument the application to collect performance metrics for the app. When set to false, Elastic APM will not affect your application at all.
# 
# NOTE: Both active and instrument needs to be true for instrumentation to be running.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: Boolean
# Default value: true
#
# instrument=true

# The name of your service
#
# This is used to keep all the errors and transactions of your service together
# and is the primary filter in the Elastic APM user interface.
# 
# NOTE: The service name must conform to this regular expression: ^[a-zA-Z0-9 _-]+$. In less regexy terms: Your service name must only contain characters from the ASCII alphabet, numbers, dashes, underscores and spaces.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: String
# Default value: Name of main class or jar
#
# service_name=Name of main class or jar

# A version string for the currently deployed version of the service. If you donâ€™t version your deployments, the recommended value for this field is the commit identifier of the deployed revision, e.g. the output of git rev-parse HEAD.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: String
# Default value: 
#
# service_version=

# The name of the environment this service is deployed in, e.g. "production" or "staging".NOTE: The APM UI does not fully support the environment setting yet.
# You can use the query bar to filter for a specific environment,
# but by default the environments will be mixed together.
# Also keep that in mind when creating alerts.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: String
# Default value: 
#
# environment=

# By default, the agent will sample every transaction (e.g. request to your service). To reduce overhead and storage requirements, you can set the sample rate to a value between 0.0 and 1.0. We still record overall time and the result for unsampled transactions, but no context information, tags, or spans.
#
# This setting can be changed at runtime
# Type: Double
# Default value: 1.0
#
# transaction_sample_rate=1.0

# Limits the amount of spans that are recorded per transaction.
# 
# This is helpful in cases where a transaction creates a very high amount of spans (e.g. thousands of SQL queries).
# 
# Setting an upper limit will prevent overloading the agent and the APM server with too much work for such edge cases.
#
# This setting can be changed at runtime
# Type: Integer
# Default value: 500
#
# transaction_max_spans=500

# Sometimes it is necessary to sanitize the data sent to Elastic APM,
# e.g. remove sensitive data.
# 
# Configure a list of wildcard patterns of field names which should be sanitized.
# These apply for example to HTTP headers and `application/x-www-form-urlencoded` data.
# 
# This option supports the wildcard `*`, which matches zero or more characters.
# Examples: `/foo/*/bar/*/baz*`, `*foo*`.
# Matching is case insensitive by default.
# Prepending an element with `(?-i)` makes the matching case sensitive.
# 
# NOTE: Data in the query string is considered non-sensitive,
# as sensitive information should not be sent in the query string.
# See https://www.owasp.org/index.php/Information_exposure_through_query_strings_in_url for more information
# 
# NOTE: Review the data captured by Elastic APM carefully to make sure it does not capture sensitive information.
# If you do find sensitive data in the Elasticsearch index,
# you should add an additional entry to this list (make sure to also include the default entries).
#
# This setting can be changed at runtime
# Type: comma separated list
# Default value: password,passwd,pwd,secret,*key,*token*,*session*,*credit*,*card*,authorization,set-cookie
#
# sanitize_field_names=password,passwd,pwd,secret,*key,*token*,*session*,*credit*,*card*,authorization,set-cookie

# A list of instrumentations which should be disabled.
# Valid options are `annotations`, `apache-httpclient`, `elasticsearch-restclient`, `http-client`, `incubating`, `jax-rs`, `jax-rs-annotations`, `jdbc`, `opentracing`, `public-api`, `servlet-api`, `servlet-api-async`, `spring-mvc`, `spring-resttemplate`.
# If you want to try out incubating features,
# set the value to an empty string.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: comma separated list
# Default value: incubating
#
# disable_instrumentations=incubating

# When reporting exceptions,
# un-nests the exceptions matching the wildcard pattern.
# This can come in handy for Spring's `org.springframework.web.util.NestedServletException`,
# for example.
# 
# This option supports the wildcard `*`, which matches zero or more characters.
# Examples: `/foo/*/bar/*/baz*`, `*foo*`.
# Matching is case insensitive by default.
# Prepending an element with `(?-i)` makes the matching case sensitive.
#
# This setting can be changed at runtime
# Type: comma separated list
# Default value: (?-i)*Nested*Exception
#
# unnest_exceptions=(?-i)*Nested*Exception

############################################
# HTTP                                     #
############################################

# For transactions that are HTTP requests, the Java agent can optionally capture the request body (e.g. POST variables).
# 
# If the request has a body and this setting is disabled, the body will be shown as [REDACTED].
# 
# This option is case-insensitive.
# NOTE: Currently, only `application/x-www-form-urlencoded` (form parameters) are supported.
# Forms which include a file upload (`multipart/form-data`) are not supported.
# 
# WARNING: request bodies often contain sensitive values like passwords, credit card numbers etc.If your service handles data like this, we advise to only enable this feature with care.
#
# Valid options: off, errors, transactions, all
# This setting can be changed at runtime
# Type: EventType
# Default value: OFF
#
# capture_body=OFF

# Used to restrict requests to certain URLs from being instrumented.
# 
# This property should be set to an array containing one or more strings.
# When an incoming HTTP request is detected, its URL will be tested against each element in this list.
# 
# This option supports the wildcard `*`, which matches zero or more characters.
# Examples: `/foo/*/bar/*/baz*`, `*foo*`.
# Matching is case insensitive by default.
# Prepending an element with `(?-i)` makes the matching case sensitive.
# 
# NOTE: All errors that are captured during a request to an ignored URL are still sent to the APM Server regardless of this setting.
#
# This setting can be changed at runtime
# Type: comma separated list
# Default value: /VAADIN/*,/heartbeat*,/favicon.ico,*.js,*.css,*.jpg,*.jpeg,*.png,*.gif,*.webp,*.svg,*.woff,*.woff2
#
# ignore_urls=/VAADIN/*,/heartbeat*,/favicon.ico,*.js,*.css,*.jpg,*.jpeg,*.png,*.gif,*.webp,*.svg,*.woff,*.woff2

# Used to restrict requests from certain User-Agents from being instrumented.
# 
# When an incoming HTTP request is detected,
# the User-Agent from the request headers will be tested against each element in this list.
# Example: `curl/*`, `*pingdom*`
# 
# This option supports the wildcard `*`, which matches zero or more characters.
# Examples: `/foo/*/bar/*/baz*`, `*foo*`.
# Matching is case insensitive by default.
# Prepending an element with `(?-i)` makes the matching case sensitive.
# 
# NOTE: All errors that are captured during a request by an ignored user agent are still sent to the APM Server regardless of this setting.
#
# This setting can be changed at runtime
# Type: comma separated list
# Default value: 
#
# ignore_user_agents=

# If set to `true`,
# transaction names of unsupported Servlet API-based frameworks will be in the form of `$method $path` instead of just `$method`.
# 
# WARNING: If your URLs contain path parameters like `/user/$userId`,
# you should be very careful when enabling this flag,
# as it can lead to an explosion of transaction groups.
# Take a look at the `url_groups` option on how to mitigate this problem by grouping URLs together.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: Boolean
# Default value: false
#
# use_path_as_transaction_name=false

# This option is only considered, when `use_path_as_transaction_name` is active.
# 
# With this option, you can group several URL paths together by using a wildcard expression like `/user/*`.
# 
# This option supports the wildcard `*`, which matches zero or more characters.
# Examples: `/foo/*/bar/*/baz*`, `*foo*`.
# Matching is case insensitive by default.
# Prepending an element with `(?-i)` makes the matching case sensitive.
#
# This setting can be changed at runtime
# Type: comma separated list
# Default value: 
#
# url_groups=

############################################
# Logging                                  #
############################################

# Sets the logging level for the agent.
# 
# This option is case-insensitive.
#
# Valid options: ERROR, WARN, INFO, DEBUG, TRACE
# This setting can be changed at runtime
# Type: Level
# Default value: INFO
#
# log_level=INFO

# Sets the path of the agent logs.
# The special value `_AGENT_HOME_` is a placeholder for the folder the elastic-apm-agent.jar is in.
# Example: `_AGENT_HOME_/logs/elastic-apm.log`
# 
# When set to the special value 'System.out',
# the logs are sent to standard out.
# 
# NOTE: When logging to a file,
# it's content is deleted when the application starts.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: String
# Default value: System.out
#
# log_file=System.out

# A boolean specifying if the agent should integrate into SLF4J's MDC to enable trace-log correlation.
# If set to `true`, the agent will set the `spanId` and `traceId` for the currently active spans and transactions to the MDC.
# You can then use the pattern format of your logging implementation to write the MDC values to your log file.
# With the help of Filebeat and Logstash or an Elasticsearch ingest pipeline,
# you can index your log files and correlate them with APM traces.
# With this integration you can get all logs belonging to a particular trace and vice-versa:
# for a specific log, see in which context it has been logged and which parameters the user provided. 
# While it's allowed to enable this setting at runtime, you can't disable it without a restart.
# 
# NOTE: This is an incubating feature and the MDC key names might change.
#
# This setting can be changed at runtime
# Type: Boolean
# Default value: false
#
# enable_log_correlation=false

############################################
# Reporter                                 #
############################################

# This string is used to ensure that only your agents can send data to your APM server.
# 
# Both the agents and the APM server have to be configured with the same secret token.
# Use if APM Server requires a token.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: String
# Default value: 
#
# secret_token=

# The URLs for your APM Servers
#
# The URLs must be fully qualified, including protocol (http or https) and port.
# 
# NOTE: Providing multiple URLs only works if intake API v2 is enabled.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: comma separated list
# Default value: http://localhost:8200
#
# server_urls=http://localhost:8200

# Server timeout
#
# If a request to the APM server takes longer than the configured timeout,
# the request is cancelled and the event (exception or transaction) is discarded.
# Set to 0 to disable timeouts.
# 
# WARNING: If timeouts are disabled or set to a high value, your app could experience memory issues if the APM server times out.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: TimeDuration
# Supports the duration suffixes ms, s and m. Example: 5s.
# The default unit for this option is s.
# Default value: 5s
#
# server_timeout=5s

# By default, the agent verifies the SSL certificate if you use an HTTPS connection to the APM server.
# 
# Verification can be disabled by changing this setting to false.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: Boolean
# Default value: true
#
# verify_server_cert=true

# Interval with which transactions should be sent to the APM server.
# 
# A lower value will increase the load on your APM server,
# while a higher value can increase the memory pressure on your app.
# 
# A higher value also impacts the time until transactions are indexed and searchable in Elasticsearch.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: TimeDuration
# Supports the duration suffixes ms, s and m. Example: 1s.
# The default unit for this option is s.
# Default value: 1s
#
# flush_interval=1s

# The maximum size of buffered events.
# 
# Events like transactions and spans are buffered when the agent can't keep up with sending them to the APM Server or if the APM server is down.
# 
# If the queue is full, events are rejected which means you will lose transactions and spans in that case.
# This guards the application from crashing in case the APM server is unavailable for a longer period of time.
# 
# A lower value will decrease the heap overhead of the agent,
# while a higher value makes it less likely to lose events in case of a temporary spike in throughput.
#
# This setting can be changed at runtime
# Type: Integer
# Default value: 512
#
# max_queue_size=512

# Whether each transaction should have the process arguments attached.
# Disabled by default to save disk space.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: Boolean
# Default value: false
#
# include_process_args=false

# Maximum time to keep an HTTP request to the APM Server open for.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: TimeDuration
# Supports the duration suffixes ms, s and m. Example: 10s.
# The default unit for this option is s.
# Default value: 10s
#
# api_request_time=10s

# The maximum total compressed size of the request body which is sent to the APM server intake api via a chunked encoding (HTTP streaming).
# Note that a small overshoot is possible.
# 
# Allowed byte units are `b`, `kb` and `mb`. `1kb` is equal to `1024b`.
#
# This setting can not be changed at runtime. Changes require a restart of the application.
# Type: ByteValue
# Default value: 768kb
#
# api_request_size=768kb

############################################
# Stacktrace                               #
############################################

# Used to determine whether a stack trace frame is an 'in-app frame' or a 'library frame'.
# Setting this option can also improve the startup time.
# 
# In order to be able to use the API annotations @CaptureTransaction and @CaptureSpan,
# it is required to set these options.
#
# This setting can be changed at runtime
# Type: comma separated list
# Default value: 
#
# application_packages=

# Setting it to 0 will disable stack trace collection. Any positive integer value will be used as the maximum number of frames to collect. Setting it -1 means that all frames will be collected.
#
# This setting can be changed at runtime
# Type: Integer
# Default value: 50
#
# stack_trace_limit=50

# In its default settings, the APM agent will collect a stack trace with every recorded span.
# While this is very helpful to find the exact place in your code that causes the span, collecting this stack trace does have some overhead. 
# When setting this option to `-1`, stack traces will be collected for all spans. Setting it to a positive value, e.g. `5ms`, will limit stack trace collection to spans with durations equal or longer than the given value, e.g. 5 milliseconds.
# 
# To disable stack trace collection for spans completely, set the value to 0.
#
# This setting can be changed at runtime
# Type: TimeDuration
# Supports the duration suffixes ms, s and m. Example: 5ms.
# The default unit for this option is ms.
# Default value: 5ms
#
# span_frames_min_duration=5ms

----
