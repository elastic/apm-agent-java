ifdef::env-github[]
NOTE: For the best reading experience,
please view this documentation at https://www.elastic.co/guide/en/apm/agent/java[elastic.co]
endif::[]

[[logs]]
== Logs

Elastic Java APM Agent provides the following log features:

- <<log-correlation-ids>> : Automatically inject correlation IDs that allow navigation between logs and traces.
- <<log-reformatting>> : Automatically reformat plaintext logs in ECS logging format
// TODO add link to ECS logging format
// - <<log-sending>> : Automatically send logs to APM Server without filebeat

Those features are part of log ingestion strategies.
// TODO : add link to the Observability/APM docs for the different log ingestion strategies

[float]
[[log-correlation-ids]]
=== Log correlation

{apm-guide-ref}/log-correlation.html[Log correlation] allows you to navigate to all logs belonging to a particular trace
and vice-versa: for a specific log, see in which context it has been logged and which parameters the user provided.

NOTE: Starting in APM agent version 1.30.0, log correlation is enabled by default.
In previous versions, log correlation must be explicitly enabled by setting
the `enable_log_correlation` configuration variable to `true`.

In order to correlate logs from your application with transactions captured by the Elastic APM Java Agent,
the agent injects the following IDs into https://www.slf4j.org/api/org/slf4j/MDC.html[slf4j-MDC]-equivalents of
<<supported-logging-frameworks, supported logging frameworks>>:

* {ecs-ref}/ecs-tracing.html[`transaction.id`]
* {ecs-ref}/ecs-tracing.html[`trace.id`]
* {ecs-ref}/ecs-error.html[`error.id`]

// TODO : list which log libraries are supported

For plain text logs, the pattern layout of your logging configuration needs to be modified to write the MDC values into
log files. If you are using Logback or log4j, add `%X` to the format to log all MDC values or `%X{trace.id}` to only log the trace id.

[float]
[[log-reformatting]]
=== Log reformatting (experimental)

The agent can automatically reformat application logs to ECS format, without adding a dependency to `ecs-logging-java`, modifying the application
logging configuration and making the application always use ECS log format. In short, it provides the benefits of ECS logging at runtime without any 
change to the application.

Log reformatting is controlled by the <<config-log-ecs-reformatting, `log_ecs_reformatting`>> configuration option, and is disabled by default.

// [float]
// [[log-sending]]
// === Log sending (experimental)
//
// The agent can automatically capture and send logs directly to APM Server, which allows to ingest log events without relying filebeat.
//
// Log sending is controlled by the `log_sending` configuration option and is disabled by default.
// // TODO replace with an actual link on log_sending config
